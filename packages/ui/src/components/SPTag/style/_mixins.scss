@use 'sass:map';
@use 'sass:math';
@use 'sass:meta';
@use 'sass:selector';
@use '@theme/src/material/settings' as settings;
@use './_vars' as *;

@mixin tag-sizes {
  @each $sizeName, $multiplier in settings.$size-scales {
    $size: map.get($tag-sizes, 'font-size') + math.div(2 * $multiplier, 16);
    $height: map.get($tag-sizes, 'height') + (6 * $multiplier);
    $padding: math.round(math.div($height, $tag-padding-ratio));

    .sp-tag.sp-tag--size-#{$sizeName} {
      --sp-tag-size: #{$size};
      --sp-tag-height: #{$height};
      font-size: $size;
      padding: 0 $padding;

      .sp-avatar {
        --sp-avatar-height: #{$height - 6};

        @at-root #{selector.append('.sp-tag--pill', &)} {
          --sp-avatar-height: #{$height};
        }
      }

      .sp-avatar--start {
        margin-inline-start: -$padding * 0.7;
        margin-inline-end: $padding * 0.5;

        @at-root #{selector.append('.sp-tag--pill', &)} {
          margin-inline-start: -$padding;
        }
      }

      .sp-avatar--end {
        margin-inline-start: $padding * 0.5;
        margin-inline-end: -$padding * 0.7;

        @at-root #{selector.append('.sp-tag--pill', &)} {
          margin-inline-end: -$padding;
        }

        + .sp-tag__close {
          @at-root #{selector.append('.sp-tag--pill', &)} {
            margin-inline-start: $padding * 1.5;
          }
        }
      }

      .sp-icon--start,
      .sp-tag__filter {
        margin-inline-start: -$padding * 0.5;
        margin-inline-end: $padding * 0.5;
      }

      .sp-icon--end,
      .sp-tag__close {
        margin-inline-start: $padding * 0.5;
        margin-inline-end: -$padding * 0.5;
      }

      .sp-icon--end,
      .sp-avatar--end,
      .sp-tag__append {
        + .sp-tag__close {
          margin-inline-start: $padding;
        }
      }
    }
  }
}

@mixin tag-density($properties, $densities) {
  @each $density, $multiplier in $densities {
    $value: calc(var(--sp-tag-height) + #{$multiplier * settings.$spacer});

    &.sp-tag--density-#{$density} {
      @if meta.type-of($properties) == 'list' {
        @each $property in $properties {
          #{$property}: $value;
        }
      } @else {
        #{$properties}: $value;
      }
    }
  }
}
